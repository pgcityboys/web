// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.707
package templates

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bytes"

import (
	"net/http"
	"web/templates/components"
)

func CallPage() templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
		if !templ_7745c5c3_IsBuffer {
			templ_7745c5c3_Buffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<!doctype html><html lang=\"en\"><head><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>OnlyStudents</title><link rel=\"stylesheet\" href=\"/assets/navbar.css\"></head><body>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = components.Navbar().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div class=\"container\"><h1>Welcome to the Call Page</h1><iframe allow=\"camera; microphone; display-capture; fullscreen; clipboard-read; clipboard-write; autoplay\" id=\"mirotalk-iframe\" style=\"height: 100vh; width: 100%; border: 0px;\"></iframe></div><script>\r\n        document.addEventListener('DOMContentLoaded', (event) => {\r\n            function createIframeSrc(callId, username) {\r\n                const baseUrl = 'https://p2p.mirotalk.com/join';\r\n                const params = new URLSearchParams({\r\n                    room: callId,\r\n                    name: username,\r\n                    notify: '0'\r\n                });\r\n                return `${baseUrl}?${params.toString()}`;\r\n            }\r\n\r\n            const callId = 'roomId'; // Replace with actual room ID\r\n            const username = crypto.randomUUID(); // Replace with actual username\r\n            const iframeSrc = createIframeSrc(callId, username);\r\n\r\n            document.getElementById('mirotalk-iframe').src = iframeSrc;\r\n        });\r\n    </script></body></html>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if !templ_7745c5c3_IsBuffer {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteTo(templ_7745c5c3_W)
		}
		return templ_7745c5c3_Err
	})
}

func HandleCallPage(w http.ResponseWriter, r *http.Request) {
	CallPage().Render(r.Context(), w)
}
