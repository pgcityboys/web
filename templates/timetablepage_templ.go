// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.707
package templates

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bytes"

import (
	"net/http"
	"web/templates/components"
)

func TimeTablePage() templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
		if !templ_7745c5c3_IsBuffer {
			templ_7745c5c3_Buffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<!doctype html><html lang=\"en\"><head><link href=\"https://cdn.rawgit.com/nizarmah/calendar-javascript-lib/master/calendarorganizer.min.css\" rel=\"stylesheet\"><link rel=\"stylesheet\" href=\"/assets/navbar.css\"><link rel=\"stylesheet\" href=\"/assets/timetable.css\"><style>\r\n        .popup {\r\n            display: none;\r\n            position: fixed;\r\n            top: 50%;\r\n            left: 50%;\r\n            transform: translate(-50%, -50%);\r\n            background-color: white;\r\n            padding: 20px;\r\n            box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);\r\n            z-index: 1000;\r\n        }\r\n    </style></head><body>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = components.Navbar().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div id=\"content\"><div id=\"calendarContainer\"></div><div id=\"organizerContainer\"></div></div><div class=\"popup\" id=\"popup\"><h2>Formularz do uzupe≈Çnienia</h2><form id=\"eventForm\"><label for=\"startTime\">StartTime:</label> <input type=\"text\" id=\"startTime\" name=\"startTime\"><br><label for=\"endTime\">EndTime:</label> <input type=\"text\" id=\"endTime\" name=\"endTime\"><br><label for=\"category\">Category:</label> <input type=\"text\" id=\"category\" name=\"category\"><br><label for=\"link\">Link:</label> <input type=\"text\" id=\"link\" name=\"link\"><br><label for=\"day\">Day:</label> <input type=\"number\" id=\"day\" name=\"day\" min=\"1\" max=\"31\"><br><label for=\"month\">Month:</label> <input type=\"number\" id=\"month\" name=\"month\" min=\"1\" max=\"12\"><br><label for=\"year\">Year:</label> <input type=\"number\" id=\"year\" name=\"year\"><br><input type=\"submit\" value=\"Submit\"> <button type=\"button\" onclick=\"closePopup()\">Close</button></form></div><script src=\"https://cdn.rawgit.com/nizarmah/calendar-javascript-lib/master/calendarorganizer.min.js\"></script><script src=\"assets/timetable.js\"></script></body></html>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if !templ_7745c5c3_IsBuffer {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteTo(templ_7745c5c3_W)
		}
		return templ_7745c5c3_Err
	})
}

func HandleTimeTablePage(w http.ResponseWriter, r *http.Request) {
	TimeTablePage().Render(r.Context(), w)
}
